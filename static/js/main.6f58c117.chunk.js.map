{"version":3,"sources":["services/api.js","components/Header/Header.js","services/action.js","components/SVGContainer/SVGContainer.js","components/City/City.js","components/CitiesList/CitiesList.js","components/CityFull/CityFull.js","components/App/App.js","services/reducer.js","services/storeConfig.js","index.js"],"names":["_getResource","city","units","a","fetch","res","ok","Error","status","json","_transformCity","main","name","id","weather","getByCityName","cityName","getByCityId","cityId","getOneCallCity","Header","dispatch","useDispatch","history","useHistory","useState","setName","onClick","event","preventDefault","type","then","catch","error","SetCityByName","push","className","value","placeholder","aria-label","onChange","callback","currentTarget","onChangeNameHandler","SVGContainer","state","icon","scale","stateFirst","imgState","src","alt","City","props","data","coord","lon","lat","string","datas","Refresh","useCallback","UpdateCity","Delete","DeleteCity","Open","hourly","GetOneCallCity","ShortInfo","Math","floor","feels_like","aria-hidden","pressure","humidity","parseInt","temp","CitiesList","cities","useSelector","map","item","CityFull","useParams","find","console","log","tempData","i","x","y","width","height","opacity","color","title","App","path","component","exact","render","initialState","isLoading","reducer","action","filter","Object","entries","fromEntries","_omit","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6f58c117.chunk.js","sourcesContent":["\r\nconst _apiBase = `https://api.openweathermap.org/data/2.5/`;\r\nconst _apiKey = `&appid=50fb0af36e080f721ce75485613869d9`;\r\nconst _imgBase = `http://openweathermap.org/img/wn/`;\r\n\r\n\r\nconst _getResource = async (city, units) => {\r\n    const res = await fetch(`${_apiBase}${city}${_apiKey}${units}`);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${city}` +\r\n            `, received ${res.status}`)\r\n    }\r\n    return await res.json();\r\n};\r\n\r\nconst _getImage = (icon, scale) => {\r\n    return `${_imgBase}${icon}@${scale}x.png`;\r\n};\r\n\r\nconst _transformCity = (city) =>{\r\n    let main = {\r\n        name:city.name,\r\n        id: city.id,\r\n        weather:city.main\r\n    };\r\n    return {\r\n        main,\r\n        city\r\n    };\r\n};\r\n\r\nconst getByCityName = async (cityName, units='metric') => {\r\n    const city = await _getResource(`weather?q=${cityName}`, `&units=${units}`);\r\n    return _transformCity(city);\r\n\r\n};\r\n\r\nconst getByCityId = async (cityId, units='metric') => {\r\n    const city = await _getResource(`weather?id=${cityId}`, `&units=${units}`);\r\n    return _transformCity(city);\r\n};\r\n\r\nconst getOneCallCity = async (cityId, units='metric') => {\r\n    return await _getResource(`onecall?${cityId}`, `&units=${units}`);\r\n};\r\n\r\nexport {\r\n    getByCityName,\r\n    getByCityId,\r\n    getOneCallCity,\r\n    _getImage\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SetCityByName} from \"../../services/action\";\r\nimport '../../styles/Header.css'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const onClick = (event, name) => {\r\n        event.preventDefault();\r\n        dispatch(SetCityByName(name));\r\n        setName('');\r\n        history.push('/weather-widget');\r\n    };\r\n\r\n    const onChangeNameHandler = (event, callback) => {\r\n        const {value} = event.currentTarget;\r\n        callback(value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"album py-1 bg-light\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"col-md-6\">\r\n                    <p className=\"brand\"\r\n                       onClick={()=>{history.push('/weather-widget')}}\r\n                    >Open Weather</p>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\"\r\n                               value={name}\r\n                               type=\"search\"\r\n                               placeholder=\"Type your city\"\r\n                               aria-label=\"Search\"\r\n                               onChange={event => onChangeNameHandler(event, setName)}/>\r\n                        <button className=\"btn btn-outline-primary\"\r\n                                type=\"submit\"\r\n                                onClick={event => onClick(event, name)}>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import {getByCityId, getByCityName, getOneCallCity} from \"./api\";\r\n\r\nexport const DeleteCity = (id) => ({type:'DELETE_ONE_CITY', id});\r\n\r\nexport const UpdateCity = (id) => dispatch => {\r\n    dispatch({type: 'SET_NEW_CITY_PENDING'});\r\n    getByCityId(id)\r\n        .then(function(city){\r\n            dispatch({type: 'SET_NEW_CITY_DONE', city});\r\n            dispatch({type: 'UPD_ONE_CITY_DONE_WITH_DATA_DONE', city});\r\n        })\r\n        .catch(function(error){\r\n            dispatch({type: 'SET_NEW_CITY_ERROR', error})\r\n        });\r\n};\r\n\r\nexport const GetOneCity = (id) => dispatch => {\r\n    dispatch({type:'GET_ONE_CITY', id});\r\n};\r\n\r\nexport const GetOneCallCity = (string) => dispatch => {\r\n    dispatch({type: 'SET_NEW_CITY_PENDING'});\r\n    getOneCallCity(string)\r\n        .then((city) =>{\r\n            let hourly = city.hourly;\r\n            dispatch({type:'GET_ONE_CALL_CITY', hourly});\r\n        })\r\n        .catch(function(error){\r\n            dispatch({type: 'SET_NEW_CITY_ERROR', error})\r\n        })\r\n};\r\n\r\nexport const SetCityByName = (name) => dispatch => {\r\n    dispatch({type: 'SET_NEW_CITY_PENDING'});\r\n    getByCityName(name)\r\n        .then(function(city){\r\n            dispatch({type: 'SET_NEW_CITY_DONE', city});\r\n        })\r\n        .catch(function(error){\r\n        dispatch({type: 'SET_NEW_CITY_ERROR', error})\r\n    });\r\n};\r\n\r\n","import React from 'react';\r\nimport {_getImage} from '../../services/api'\r\n\r\nconst SVGContainer = (state) => {\r\n    let stateFirst = state.state;\r\n\r\n    if(!!stateFirst[1]){\r\n        stateFirst = stateFirst[1];\r\n    }else {\r\n        stateFirst = stateFirst[0];\r\n    }\r\n\r\n    let imgState = stateFirst.icon;\r\n\r\n    return (\r\n        <div>\r\n            <img className='icon' src={_getImage(imgState, 4)} alt={`icon`}/>\r\n        </div>\r\n)\r\n};\r\n\r\nexport default SVGContainer;","import React, {useCallback} from \"react\";\r\nimport {DeleteCity, GetOneCallCity, GetOneCity, UpdateCity} from \"../../services/action\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router\";\r\nimport '../../styles/City.css';\r\nimport SVGContainer from \"../SVGContainer/SVGContainer\";\r\n\r\n\r\nconst City = (props) => {\r\n    let { name, weather, id, coord:{lon, lat}} = props.data;\r\n    let string = `lat=${lat}&lon=${lon}`;\r\n    let datas = props.data.main;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const Refresh = useCallback(\r\n        () => {\r\n            dispatch(UpdateCity(id));\r\n        },\r\n        [id, dispatch],\r\n    );\r\n    const Delete = useCallback(\r\n        () => {\r\n            dispatch(DeleteCity(id));\r\n        },\r\n        [id],\r\n    );\r\n    const Open = useCallback(\r\n        () => {\r\n            dispatch(GetOneCallCity(string));\r\n            history.push(`/city/${id}`);\r\n        },\r\n        [id, string],\r\n    );\r\n\r\n    const ShortInfo = () => {\r\n        return (\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text fl\">{`Feels like: ${Math.floor(datas.feels_like)}°C`}</p>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <i className=\"fa fa-dot-circle-o\" aria-hidden=\"true\">{` ${Math.floor(datas.pressure)}hPa`}</i>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <i className=\"fa fa-tint\" aria-hidden=\"true\">{` ${Math.floor(datas.humidity)}%`}</i>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"btn-group\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-outline-primary\"\r\n                            onClick={Open}\r\n                        >\r\n                            <i className=\"fa fa-info\" aria-hidden=\"true\"/>\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-outline-success\"\r\n                            onClick={Refresh}\r\n                        >\r\n                            <i className=\"fa fa-refresh\" aria-hidden=\"true\"/>\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-outline-danger \"\r\n                            onClick={Delete}\r\n                        >\r\n                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-3\">\r\n            <div className=\"card mb-3 shadow-sm\">\r\n                <p className=\"cityName\">{name}</p>\r\n                <div className=\"navbar\">\r\n                    <SVGContainer state={weather}/>\r\n                    <p className=\"navbar-text\">{`${parseInt(datas.temp)}°C`}</p>\r\n                </div>\r\n                <ShortInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default City;\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport City from \"../City\";\r\n\r\n const CitiesList = () => {\r\n     const cities = useSelector(state=>state.cities);\r\n\r\n     return(\r\n         <div className=\"album py-5 bg-light\">\r\n             <div className=\"container\">\r\n                 <div className=\"row\">\r\n                     {cities.map((item)=><City data={item} key={item.id}/>)}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     )\r\n};\r\n\r\nexport default CitiesList;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport SVGContainer from \"../SVGContainer/SVGContainer\";\r\nimport '../../styles/CityFull.css';\r\nimport '../../../node_modules/react-vis/dist/style.css';\r\nimport {FlexibleHeightXYPlot, XAxis, HorizontalGridLines, HeatmapSeries} from 'react-vis';\r\n\r\nconst CityFull = () => {\r\n\r\n    const cities = useSelector(state=>state.cities);\r\n    const {id} = useParams();\r\n    let city = cities.find((city)=>city.id === parseInt(id));\r\n    console.log(city);\r\n    const hourly = useSelector(state=>state.hourly);\r\n\r\n    let {name, main, weather} = city;\r\n    let tempData = [];\r\n\r\n    for (let i = 1; i<=12; i++){\r\n        tempData.push({\r\n            x: i+1,\r\n            y: hourly[i].temp\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"col-md-8 fullInfo\" >\r\n                <div className=\"card shadow-sm\">\r\n                    <p className=\"cityName\">{name}</p>\r\n                    <div className=\"navbar\">\r\n                        <SVGContainer state={weather}/>\r\n                        <p className=\"navbar-text temperature\">{`${parseInt(main.temp)}°C`}</p>\r\n                    </div>\r\n                    <div className=\"navbar\">\r\n                        <p className=\"navbar-text\">{`...additional content...`}</p>\r\n                    </div>\r\n                    <div className=\"navbar\">\r\n                        <FlexibleHeightXYPlot\r\n                            width={600}\r\n                            height={300}>\r\n                            <HorizontalGridLines />\r\n                            <HeatmapSeries\r\n                                className=\"heatmap-series\"\r\n                                opacity='0.6'\r\n                                color={\"red\"}\r\n                                data={tempData}/>\r\n                            <XAxis title=\"hrs\" />\r\n                        </FlexibleHeightXYPlot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CityFull;","import React from \"react\";\nimport {  BrowserRouter as Router, Switch, Route  } from 'react-router-dom';\nimport Header from \"../Header\";\nimport CitiesList from \"../CitiesList\";\nimport CityFull from \"../CityFull\";\n\nconst App = () =>{\n  return (\n      <Router>\n          <div className=\"App\">\n              <Header/>\n              <Switch>\n                  <Route\n                      path='/weather-widget'\n                      component={CitiesList}\n                      exact\n                  />\n                  <Route\n                      path='/city/:id'\n                      component={CityFull}\n                      exact\n                  />\n                  <Route render={() => <h2>Page not found</h2>} />\n              </Switch>\n          </div>\n      </Router>\n  );\n};\n\nexport default App;\n","import _omit from 'lodash/omit';\r\nconst initialState = {\r\n    isLoading:false,\r\n    error:false,\r\n    cities:[],\r\n    city:{},\r\n    data: {},\r\n    hourly:[]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_NEW_CITY_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'SET_NEW_CITY_ERROR':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        case 'SET_NEW_CITY_DONE':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: {\r\n                    ...state.data,\r\n                    [action.city.main.id]:action.city.main\r\n                },\r\n                error: '',\r\n                cities: [...state.cities.filter((item) => item.id !== action.city.city.id), action.city.city]\r\n            };\r\n        case 'UPD_ONE_CITY_DONE_WITH_DATA_DONE':{\r\n            const {  city:{  main:{  id  }  }  } = action;\r\n            const {city} = action;\r\n            let data = Object.entries(state.data);\r\n            data.map((item)=>{\r\n                if(parseInt(item[0])===id){\r\n                    item[1] = city.main;\r\n                }\r\n                return item;\r\n            });\r\n            data = Object.fromEntries(data);\r\n            return {\r\n                ...state,\r\n                data,\r\n                error: '',\r\n                cities: [...state.cities.filter((item) => item.id !==action.city.city.id), action.city.city]\r\n            };\r\n        }\r\n        case 'DELETE_ONE_CITY':\r\n            return {\r\n                ...state,\r\n                data: _omit(state.data, action.id),\r\n                cities:state.cities.filter((city) => city.id !== action.id)\r\n            };\r\n        case 'GET_ONE_CALL_CITY':{\r\n            return {\r\n                ...state,\r\n                hourly: action.hourly\r\n            };\r\n        }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\nexport default reducer;","import {  applyMiddleware, createStore  } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist:['data']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\r\nconst persistor = persistStore(store);\r\n\r\nexport  { store, persistor };\r\n","import React from 'react';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ReactDOM from 'react-dom';\nimport {  Provider  } from 'react-redux';\nimport App from './components/App/App';\nimport {store, persistor} from './services/storeConfig';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <App />\n          </PersistGate>\n      </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}